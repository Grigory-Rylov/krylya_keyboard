#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include "boards/shields/krylya_keyboard/mouse.dtsi"

//  ##########################################################
//  ###########        WORKING 2023/07/1       ###############
//  ##########################################################
// #############         LAYERS         #################

#define SYM_L   1
#define NAV_L   2
#define NAV2_L  3

//#define OTHER_L 4

#define DEFAULT 0
#define NAVIGATION   1
#define FUNCTION   2
#define NUMBERS  3
#define MOUSE  4
#define SYMBOLS 5
#define HOTKEYS  6

// Desktop and tab navigation shortcuts		

#define DESKTOP_LT   LC(LG(LEFT))
#define DESKTOP_RT   LC(LG(RIGHT))
#define WINDOW_LT    LA(LS(TAB))
#define WINDOW_RT    LA(TAB)
#define TAB_LT       LC(LS(TAB))
#define TAB_RT       LC(TAB)

// NOT USED  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
// Generic bindings

#define KILL_WINDOW  LA(F4)
#define MAXIMIZE     LG(UP)
#define MINIMIZE     LG(DOWN)
#define UN_MINIMIZE  LG(LC(N))

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <500>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <300>;
};

&sl { release-after-ms = <2000>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        ZMK_MACRO(inv_qm,

        wait-ms = <10>;
        tap-ms = <10>;
        bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>,
            <&macro_release &kp LALT>;

        )
    };

    combos {
        compatible = "zmk,combos";

        combo_boot {
            timeout-ms = <50>;
            key-positions = <30 32 33 35>;
            bindings = <&bootloader>;
        };

    };

    behaviors {
        //   td_mt_ls: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_LSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
        //   };
        //   td_mt_rs: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_RSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt RSHIFT CAPSLOCK>, <&kp RCTRL>;
        //   };            
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W           &kp E           &kp R               &kp T              &kp Y             &kp U               &kp I            &kp O       &kp P
&mt LCTRL A  &mt LEFT_GUI S  &mt LEFT_ALT D  &mt LEFT_SHIFT F    &kp G              &kp H             &mt RSHFT J         &mt RALT K       &mt RGUI L  &mt RCTRL SEMICOLON
&kp Z        &kp X           &kp C           &kp V               &kp B              &kp N             &kp M               &kp COMMA        &kp PERIOD  &kp SLASH
                             &mo NAVIGATION  &lt FUNCTION SPACE  &mo NUMBERS        &lt HOTKEYS TAB   &lt SYMBOLS SPACE   &lt MOUSE ENTER
            >;
        };

        NAVIGATION {
            bindings = <
&kp ESC             &none             &none              &none            &none                 &kp C_BRIGHTNESS_INC    &kp HOME   &kp UP       &kp END        &kp LG(Y)
&kp LEFT_CONTROL    &kp LGUI          &kp LALT           &kp LSHIFT       &kp BACKSPACE         &kp C_BRIGHTNESS_DEC    &kp LEFT   &kp DOWN     &kp RIGHT      &kp DELETE
&none               &kp LG(LA(LEFT))  &kp LG(LA(RIGHT))  &kp BACKSPACE    &none                 &none        &kp LG(Z)  &kp PAGE_UP  &kp PAGE_DOWN  &kp LG(A)
                                      &trans             &none            &none                 &kp TILDE        &kp CAPS   &none
            >;
        };

        FUNCTION {
            bindings = <
&none             &none     &none     &none       &kp C_VOLUME_UP         &none      &kp F7  &kp F8    &kp F9  &kp F10
&kp LEFT_CONTROL  &kp LGUI  &kp LALT  &kp LSHFT   &kp K_MUTE              &none      &kp F4  &kp F5    &kp F6  &kp F11
&none             &none     &none     &none       &kp C_VOLUME_DOWN       &kp INS    &kp F1  &kp F2    &kp F3  &kp F12
                            &none     &none       &trans                  &kp SEMI   &none   &none
            >;
        };

        NUMBERS {
            bindings = <
&none             &none     &none     &none      &none          &kp GREATER_THAN  &kp N7        &kp N8        &kp N9        &kp COLON
&kp LEFT_CONTROL  &kp LGUI  &kp LALT  &kp LSHFT  &none          &kp LESS_THAN     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_PARENTHESIS
&none             &none     &none     &none      &none          &kp EQUAL         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
                            &trans    &none      &none          &kp MINUS         &kp PLUS      &kp N0
            >;
        };

        MOUSE {
            bindings = <
&none  &msc SCRL_DOWN  &mmv MOVE_UP     &msc SCRL_UP      &none           &none  &none       &kp RALT  &kp LGUI   &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &none           &none  &kp RSHFT   &none     &none      &kp RCTRL
&none  &msc SCRL_LEFT  &none            &msc SCRL_RIGHT   &none           &none  &none       &none     &none      &none
                       &mkp LCLK        &mkp RCLK         &none           &none  &none       &trans
            >;
        };

        SYMBOLS {
            bindings = <
&kp SQT         &kp LEFT_BRACKET       &kp RIGHT_BRACKET      &kp DOUBLE_QUOTES  &kp DOLLAR             &kp PIPE      &kp HASH              &kp CARET     &kp GRAVE   &kp LEFT_BRACKET
&kp LEFT_BRACE  &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp UNDERSCORE         &kp SLASH     &kp AMPERSAND         &kp PERCENT   &kp MINUS   &kp SQT
&kp LESS_THAN   &kp EXCLAMATION        &kp COLON              &kp GREATER_THAN   &kp AT_SIGN            &kp ASTERISK  &kp NON_US_BACKSLASH  &kp TILDE     &none       &kp RIGHT_BRACKET
                                       &none                  &none              &none                  &none         &trans                &none
            >;
        };

        HOTKEYS {
            bindings = <
&bt BT_PRV  &none  &none          &kp LS(F9)     &kp RS(F10)            &none          &none          &none             &kp LG(LA(O))  &kp NON_US_BACKSLASH
&bt BT_CLR  &none  &none          &kp LG(LA(F))  &kp LC(LS(F))          &kp RA(F1)     &kp RG(N9)     &kp RA(F12)       &kp LG(LA(L))  &kp RS(N5)
&bt BT_NXT  &none  &kp LG(LA(C))  &kp LG(LA(V))  &none                  &kp LG(LA(N))  &kp LG(LA(M))  &kp RS(NUMBER_6)  &kp RS(N7)     &none
                   &none          &none          &none                  &trans         &trans         &trans
            >;
        };
    };
};
